{"version":3,"file":"index.es.js","sources":["../src/schemas.ts","../src/types/files.ts","../src/file-config.ts","../src/config.ts","../src/parsers.ts","../src/types/assistants.ts","../src/keys.ts","../src/headers-helpers.ts","../src/api-endpoints.ts","../src/request.ts","../src/data-service.ts","../src/sse.js","../src/actions.ts","../src/createPayload.ts"],"sourcesContent":["import { z } from 'zod';\nimport type { TMessageContentParts } from './types/assistants';\nimport type { TFile } from './types/files';\n\nexport const isUUID = z.string().uuid();\n\nexport enum EModelEndpoint {\n  azureOpenAI = 'azureOpenAI',\n  openAI = 'openAI',\n  bingAI = 'bingAI',\n  chatGPTBrowser = 'chatGPTBrowser',\n  google = 'google',\n  gptPlugins = 'gptPlugins',\n  anthropic = 'anthropic',\n  assistants = 'assistants',\n  custom = 'custom',\n}\n\nexport const defaultAssistantFormValues = {\n  assistant: '',\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  model: 'gpt-3.5-turbo-1106',\n  functions: [],\n  code_interpreter: false,\n  retrieval: false,\n};\n\nexport const endpointSettings = {\n  [EModelEndpoint.google]: {\n    model: {\n      default: 'chat-bison',\n    },\n    maxOutputTokens: {\n      min: 1,\n      max: 2048,\n      step: 1,\n      default: 1024,\n      maxGeminiPro: 8192,\n      defaultGeminiPro: 8192,\n    },\n    temperature: {\n      min: 0,\n      max: 1,\n      step: 0.01,\n      default: 0.2,\n    },\n    topP: {\n      min: 0,\n      max: 1,\n      step: 0.01,\n      default: 0.8,\n    },\n    topK: {\n      min: 1,\n      max: 40,\n      step: 0.01,\n      default: 40,\n    },\n  },\n};\n\nconst google = endpointSettings[EModelEndpoint.google];\n\nexport const eModelEndpointSchema = z.nativeEnum(EModelEndpoint);\n\nexport const extendedModelEndpointSchema = z.union([eModelEndpointSchema, z.string()]);\n\nexport enum ImageDetail {\n  low = 'low',\n  auto = 'auto',\n  high = 'high',\n}\n\nexport const imageDetailNumeric = {\n  [ImageDetail.low]: 0,\n  [ImageDetail.auto]: 1,\n  [ImageDetail.high]: 2,\n};\n\nexport const imageDetailValue = {\n  0: ImageDetail.low,\n  1: ImageDetail.auto,\n  2: ImageDetail.high,\n};\n\nexport const eImageDetailSchema = z.nativeEnum(ImageDetail);\n\nexport const tPluginAuthConfigSchema = z.object({\n  authField: z.string(),\n  label: z.string(),\n  description: z.string(),\n});\n\nexport type TPluginAuthConfig = z.infer<typeof tPluginAuthConfigSchema>;\n\nexport const tPluginSchema = z.object({\n  name: z.string(),\n  pluginKey: z.string(),\n  description: z.string(),\n  icon: z.string(),\n  authConfig: z.array(tPluginAuthConfigSchema),\n  authenticated: z.boolean().optional(),\n  isButton: z.boolean().optional(),\n});\n\nexport type TPlugin = z.infer<typeof tPluginSchema>;\n\nexport type TInput = {\n  inputStr: string;\n};\n\nexport type TResPlugin = {\n  plugin: string;\n  input: string;\n  thought: string;\n  loading?: boolean;\n  outputs?: string;\n  latest?: string;\n  inputs?: TInput[];\n};\n\nexport const tExampleSchema = z.object({\n  input: z.object({\n    content: z.string(),\n  }),\n  output: z.object({\n    content: z.string(),\n  }),\n});\n\nexport type TExample = z.infer<typeof tExampleSchema>;\n\nexport const tAgentOptionsSchema = z.object({\n  agent: z.string(),\n  skipCompletion: z.boolean(),\n  model: z.string(),\n  temperature: z.number(),\n});\n\nexport const tMessageSchema = z.object({\n  messageId: z.string(),\n  endpoint: z.string().optional(),\n  clientId: z.string().nullable().optional(),\n  conversationId: z.string().nullable(),\n  parentMessageId: z.string().nullable(),\n  responseMessageId: z.string().nullable().optional(),\n  overrideParentMessageId: z.string().nullable().optional(),\n  bg: z.string().nullable().optional(),\n  model: z.string().nullable().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  sender: z.string(),\n  text: z.string(),\n  generation: z.string().nullable().optional(),\n  isEdited: z.boolean().optional(),\n  isCreatedByUser: z.boolean(),\n  error: z.boolean(),\n  createdAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  updatedAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  current: z.boolean().optional(),\n  unfinished: z.boolean().optional(),\n  searchResult: z.boolean().optional(),\n  finish_reason: z.string().optional(),\n  /* assistant */\n  thread_id: z.string().optional(),\n});\n\nexport type TMessage = z.input<typeof tMessageSchema> & {\n  children?: TMessage[];\n  plugin?: TResPlugin | null;\n  plugins?: TResPlugin[];\n  content?: TMessageContentParts[];\n  files?: Partial<TFile>[];\n};\n\nexport const tConversationSchema = z.object({\n  conversationId: z.string().nullable(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  user: z.string().optional(),\n  endpoint: eModelEndpointSchema.nullable(),\n  endpointType: eModelEndpointSchema.optional(),\n  suggestions: z.array(z.string()).optional(),\n  messages: z.array(z.string()).optional(),\n  tools: z.array(tPluginSchema).optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  systemMessage: z.string().nullable().optional(),\n  modelLabel: z.string().nullable().optional(),\n  examples: z.array(tExampleSchema).optional(),\n  chatGptLabel: z.string().nullable().optional(),\n  userLabel: z.string().optional(),\n  model: z.string().nullable().optional(),\n  promptPrefix: z.string().nullable().optional(),\n  temperature: z.number().optional(),\n  topP: z.number().optional(),\n  topK: z.number().optional(),\n  context: z.string().nullable().optional(),\n  top_p: z.number().optional(),\n  frequency_penalty: z.number().optional(),\n  presence_penalty: z.number().optional(),\n  jailbreak: z.boolean().optional(),\n  jailbreakConversationId: z.string().nullable().optional(),\n  conversationSignature: z.string().nullable().optional(),\n  parentMessageId: z.string().optional(),\n  clientId: z.string().nullable().optional(),\n  invocationId: z.number().nullable().optional(),\n  toneStyle: z.string().nullable().optional(),\n  maxOutputTokens: z.number().optional(),\n  agentOptions: tAgentOptionsSchema.nullable().optional(),\n  file_ids: z.array(z.string()).optional(),\n  /* vision */\n  resendImages: z.boolean().optional(),\n  imageDetail: eImageDetailSchema.optional(),\n  /* assistant */\n  assistant_id: z.string().optional(),\n  instructions: z.string().optional(),\n  /** Used to overwrite active conversation settings when saving a Preset */\n  presetOverride: z.record(z.unknown()).optional(),\n});\n\nexport const tPresetSchema = tConversationSchema\n  .omit({\n    conversationId: true,\n    createdAt: true,\n    updatedAt: true,\n    title: true,\n  })\n  .merge(\n    z.object({\n      conversationId: z.string().nullable().optional(),\n      presetId: z.string().nullable().optional(),\n      title: z.string().nullable().optional(),\n      defaultPreset: z.boolean().optional(),\n      order: z.number().optional(),\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport const tConvoUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n  }),\n);\n\nexport const tPresetUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n  }),\n);\n\nexport type TPreset = z.infer<typeof tPresetSchema>;\n\nexport type TConversation = z.infer<typeof tConversationSchema> & {\n  presetOverride?: Partial<TPreset>;\n};\n\n// type DefaultSchemaValues = Partial<typeof google>;\n\nexport const openAISchema = tConversationSchema\n  .pick({\n    model: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    resendImages: true,\n    imageDetail: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? 'gpt-3.5-turbo',\n    chatGptLabel: obj.chatGptLabel ?? null,\n    promptPrefix: obj.promptPrefix ?? null,\n    temperature: obj.temperature ?? 1,\n    top_p: obj.top_p ?? 1,\n    presence_penalty: obj.presence_penalty ?? 0,\n    frequency_penalty: obj.frequency_penalty ?? 0,\n    resendImages: obj.resendImages ?? false,\n    imageDetail: obj.imageDetail ?? ImageDetail.auto,\n  }))\n  .catch(() => ({\n    model: 'gpt-3.5-turbo',\n    chatGptLabel: null,\n    promptPrefix: null,\n    temperature: 1,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    resendImages: false,\n    imageDetail: ImageDetail.auto,\n  }));\n\nexport const googleSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    examples: true,\n    temperature: true,\n    maxOutputTokens: true,\n    topP: true,\n    topK: true,\n  })\n  .transform((obj) => {\n    const isGeminiPro = obj?.model?.toLowerCase()?.includes('gemini-pro');\n\n    const maxOutputTokensMax = isGeminiPro\n      ? google.maxOutputTokens.maxGeminiPro\n      : google.maxOutputTokens.max;\n    const maxOutputTokensDefault = isGeminiPro\n      ? google.maxOutputTokens.defaultGeminiPro\n      : google.maxOutputTokens.default;\n\n    let maxOutputTokens = obj.maxOutputTokens ?? maxOutputTokensDefault;\n    maxOutputTokens = Math.min(maxOutputTokens, maxOutputTokensMax);\n\n    return {\n      ...obj,\n      model: obj.model ?? google.model.default,\n      modelLabel: obj.modelLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n      temperature: obj.temperature ?? google.temperature.default,\n      maxOutputTokens,\n      topP: obj.topP ?? google.topP.default,\n      topK: obj.topK ?? google.topK.default,\n    };\n  })\n  .catch(() => ({\n    model: google.model.default,\n    modelLabel: null,\n    promptPrefix: null,\n    examples: [{ input: { content: '' }, output: { content: '' } }],\n    temperature: google.temperature.default,\n    maxOutputTokens: google.maxOutputTokens.default,\n    topP: google.topP.default,\n    topK: google.topK.default,\n  }));\n\nexport const bingAISchema = tConversationSchema\n  .pick({\n    jailbreak: true,\n    systemMessage: true,\n    context: true,\n    toneStyle: true,\n    jailbreakConversationId: true,\n    conversationSignature: true,\n    clientId: true,\n    invocationId: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: '',\n    jailbreak: obj.jailbreak ?? false,\n    systemMessage: obj.systemMessage ?? null,\n    context: obj.context ?? null,\n    toneStyle: obj.toneStyle ?? 'creative',\n    jailbreakConversationId: obj.jailbreakConversationId ?? null,\n    conversationSignature: obj.conversationSignature ?? null,\n    clientId: obj.clientId ?? null,\n    invocationId: obj.invocationId ?? 1,\n  }))\n  .catch(() => ({\n    model: '',\n    jailbreak: false,\n    systemMessage: null,\n    context: null,\n    toneStyle: 'creative',\n    jailbreakConversationId: null,\n    conversationSignature: null,\n    clientId: null,\n    invocationId: 1,\n  }));\n\nexport const anthropicSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    maxOutputTokens: true,\n    topP: true,\n    topK: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? 'claude-1',\n    modelLabel: obj.modelLabel ?? null,\n    promptPrefix: obj.promptPrefix ?? null,\n    temperature: obj.temperature ?? 1,\n    maxOutputTokens: obj.maxOutputTokens ?? 4000,\n    topP: obj.topP ?? 0.7,\n    topK: obj.topK ?? 5,\n  }))\n  .catch(() => ({\n    model: 'claude-1',\n    modelLabel: null,\n    promptPrefix: null,\n    temperature: 1,\n    maxOutputTokens: 4000,\n    topP: 0.7,\n    topK: 5,\n  }));\n\nexport const chatGPTBrowserSchema = tConversationSchema\n  .pick({\n    model: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? 'text-davinci-002-render-sha',\n  }))\n  .catch(() => ({\n    model: 'text-davinci-002-render-sha',\n  }));\n\nexport const gptPluginsSchema = tConversationSchema\n  .pick({\n    model: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    tools: true,\n    agentOptions: true,\n  })\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? 'gpt-3.5-turbo',\n    chatGptLabel: obj.chatGptLabel ?? null,\n    promptPrefix: obj.promptPrefix ?? null,\n    temperature: obj.temperature ?? 0.8,\n    top_p: obj.top_p ?? 1,\n    presence_penalty: obj.presence_penalty ?? 0,\n    frequency_penalty: obj.frequency_penalty ?? 0,\n    tools: obj.tools ?? [],\n    agentOptions: obj.agentOptions ?? {\n      agent: 'functions',\n      skipCompletion: true,\n      model: 'gpt-3.5-turbo',\n      temperature: 0,\n    },\n  }))\n  .catch(() => ({\n    model: 'gpt-3.5-turbo',\n    chatGptLabel: null,\n    promptPrefix: null,\n    temperature: 0.8,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    tools: [],\n    agentOptions: {\n      agent: 'functions',\n      skipCompletion: true,\n      model: 'gpt-3.5-turbo',\n      temperature: 0,\n    },\n  }));\n\nexport function removeNullishValues<T extends object>(obj: T): T {\n  const newObj: Partial<T> = { ...obj };\n\n  (Object.keys(newObj) as Array<keyof T>).forEach((key) => {\n    if (newObj[key] === undefined || newObj[key] === null || newObj[key] === '') {\n      delete newObj[key];\n    }\n  });\n\n  return newObj as T;\n}\n\nexport const assistantSchema = tConversationSchema\n  .pick({\n    model: true,\n    assistant_id: true,\n    instructions: true,\n    promptPrefix: true,\n  })\n  .transform(removeNullishValues)\n  .catch(() => ({}));\n\nexport const compactOpenAISchema = tConversationSchema\n  .pick({\n    model: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    resendImages: true,\n    imageDetail: true,\n  })\n  .transform((obj: Partial<TConversation>) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.model === 'gpt-3.5-turbo') {\n      delete newObj.model;\n    }\n    if (newObj.temperature === 1) {\n      delete newObj.temperature;\n    }\n    if (newObj.top_p === 1) {\n      delete newObj.top_p;\n    }\n    if (newObj.presence_penalty === 0) {\n      delete newObj.presence_penalty;\n    }\n    if (newObj.frequency_penalty === 0) {\n      delete newObj.frequency_penalty;\n    }\n    if (newObj.resendImages !== true) {\n      delete newObj.resendImages;\n    }\n    if (newObj.imageDetail === ImageDetail.auto) {\n      delete newObj.imageDetail;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const compactGoogleSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    examples: true,\n    temperature: true,\n    maxOutputTokens: true,\n    topP: true,\n    topK: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.model === google.model.default) {\n      delete newObj.model;\n    }\n    if (newObj.temperature === google.temperature.default) {\n      delete newObj.temperature;\n    }\n    if (newObj.maxOutputTokens === google.maxOutputTokens.default) {\n      delete newObj.maxOutputTokens;\n    }\n    if (newObj.topP === google.topP.default) {\n      delete newObj.topP;\n    }\n    if (newObj.topK === google.topK.default) {\n      delete newObj.topK;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const compactAnthropicSchema = tConversationSchema\n  .pick({\n    model: true,\n    modelLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    maxOutputTokens: true,\n    topP: true,\n    topK: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.model === 'claude-1') {\n      delete newObj.model;\n    }\n    if (newObj.temperature === 1) {\n      delete newObj.temperature;\n    }\n    if (newObj.maxOutputTokens === 4000) {\n      delete newObj.maxOutputTokens;\n    }\n    if (newObj.topP === 0.7) {\n      delete newObj.topP;\n    }\n    if (newObj.topK === 5) {\n      delete newObj.topK;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const compactChatGPTSchema = tConversationSchema\n  .pick({\n    model: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    // model: obj.model ?? 'text-davinci-002-render-sha',\n    if (newObj.model === 'text-davinci-002-render-sha') {\n      delete newObj.model;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const compactPluginsSchema = tConversationSchema\n  .pick({\n    model: true,\n    chatGptLabel: true,\n    promptPrefix: true,\n    temperature: true,\n    top_p: true,\n    presence_penalty: true,\n    frequency_penalty: true,\n    tools: true,\n    agentOptions: true,\n  })\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.model === 'gpt-3.5-turbo') {\n      delete newObj.model;\n    }\n    if (newObj.chatGptLabel === null) {\n      delete newObj.chatGptLabel;\n    }\n    if (newObj.promptPrefix === null) {\n      delete newObj.promptPrefix;\n    }\n    if (newObj.temperature === 0.8) {\n      delete newObj.temperature;\n    }\n    if (newObj.top_p === 1) {\n      delete newObj.top_p;\n    }\n    if (newObj.presence_penalty === 0) {\n      delete newObj.presence_penalty;\n    }\n    if (newObj.frequency_penalty === 0) {\n      delete newObj.frequency_penalty;\n    }\n    if (newObj.tools?.length === 0) {\n      delete newObj.tools;\n    }\n\n    if (\n      newObj.agentOptions &&\n      newObj.agentOptions.agent === 'functions' &&\n      newObj.agentOptions.skipCompletion === true &&\n      newObj.agentOptions.model === 'gpt-3.5-turbo' &&\n      newObj.agentOptions.temperature === 0\n    ) {\n      delete newObj.agentOptions;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\n// const createGoogleSchema = (customGoogle: DefaultSchemaValues) => {\n//   const defaults = { ...google, ...customGoogle };\n//   return tConversationSchema\n//     .pick({\n//       model: true,\n//       modelLabel: true,\n//       promptPrefix: true,\n//       examples: true,\n//       temperature: true,\n//       maxOutputTokens: true,\n//       topP: true,\n//       topK: true,\n//     })\n//     .transform((obj) => {\n//       const isGeminiPro = obj?.model?.toLowerCase()?.includes('gemini-pro');\n\n//       const maxOutputTokensMax = isGeminiPro\n//         ? defaults.maxOutputTokens.maxGeminiPro\n//         : defaults.maxOutputTokens.max;\n//       const maxOutputTokensDefault = isGeminiPro\n//         ? defaults.maxOutputTokens.defaultGeminiPro\n//         : defaults.maxOutputTokens.default;\n\n//       let maxOutputTokens = obj.maxOutputTokens ?? maxOutputTokensDefault;\n//       maxOutputTokens = Math.min(maxOutputTokens, maxOutputTokensMax);\n\n//       return {\n//         ...obj,\n//         model: obj.model ?? defaults.model.default,\n//         modelLabel: obj.modelLabel ?? null,\n//         promptPrefix: obj.promptPrefix ?? null,\n//         examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n//         temperature: obj.temperature ?? defaults.temperature.default,\n//         maxOutputTokens,\n//         topP: obj.topP ?? defaults.topP.default,\n//         topK: obj.topK ?? defaults.topK.default,\n//       };\n//     })\n//     .catch(() => ({\n//       model: defaults.model.default,\n//       modelLabel: null,\n//       promptPrefix: null,\n//       examples: [{ input: { content: '' }, output: { content: '' } }],\n//       temperature: defaults.temperature.default,\n//       maxOutputTokens: defaults.maxOutputTokens.default,\n//       topP: defaults.topP.default,\n//       topK: defaults.topK.default,\n//     }));\n// };\n","export enum FileSources {\n  local = 'local',\n  firebase = 'firebase',\n  openai = 'openai',\n  s3 = 's3',\n}\n\nexport enum FileContext {\n  avatar = 'avatar',\n  unknown = 'unknown',\n  assistants = 'assistants',\n  image_generation = 'image_generation',\n  assistants_output = 'assistants_output',\n  message_attachment = 'message_attachment',\n}\n\nexport type EndpointFileConfig = {\n  disabled?: boolean;\n  fileLimit?: number;\n  fileSizeLimit?: number;\n  totalSizeLimit?: number;\n  supportedMimeTypes?: RegExp[];\n};\n\nexport type FileConfig = {\n  endpoints: {\n    [key: string]: EndpointFileConfig;\n  };\n  serverFileSizeLimit?: number;\n  avatarSizeLimit?: number;\n  checkType?: (fileType: string, supportedTypes: RegExp[]) => boolean;\n};\n\nexport type TFile = {\n  _id?: string;\n  __v?: number;\n  user: string;\n  conversationId?: string;\n  message?: string;\n  file_id: string;\n  temp_file_id?: string;\n  bytes: number;\n  filename: string;\n  filepath: string;\n  object: 'file';\n  type: string;\n  usage: number;\n  context?: FileContext;\n  source?: FileSources;\n  width?: number;\n  height?: number;\n  expiresAt?: string | Date;\n  preview?: string;\n  createdAt?: string | Date;\n  updatedAt?: string | Date;\n};\n\nexport type TFileUpload = TFile & {\n  temp_file_id: string;\n};\n\nexport type AvatarUploadResponse = {\n  url: string;\n};\n\nexport type UploadMutationOptions = {\n  onSuccess?: (data: TFileUpload, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type UploadAvatarOptions = {\n  onSuccess?: (data: AvatarUploadResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type DeleteFilesResponse = {\n  message: string;\n  result: Record<string, unknown>;\n};\n\nexport type BatchFile = {\n  file_id: string;\n  filepath: string;\n  source: FileSources;\n};\n\nexport type DeleteFilesBody = {\n  files: BatchFile[];\n  assistant_id?: string;\n};\n\nexport type DeleteMutationOptions = {\n  onSuccess?: (data: DeleteFilesResponse, variables: DeleteFilesBody, context?: unknown) => void;\n  onMutate?: (variables: DeleteFilesBody) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: DeleteFilesBody, context?: unknown) => void;\n};\n","/* eslint-disable max-len */\nimport { z } from 'zod';\nimport { EModelEndpoint } from './schemas';\nimport type { FileConfig, EndpointFileConfig } from './types/files';\n\nexport const supportsFiles = {\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.google]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.custom]: true,\n};\n\nexport const excelFileTypes = [\n  'application/vnd.ms-excel',\n  'application/msexcel',\n  'application/x-msexcel',\n  'application/x-ms-excel',\n  'application/x-excel',\n  'application/x-dos_ms_excel',\n  'application/xls',\n  'application/x-xls',\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\nexport const fullMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  ...excelFileTypes,\n];\n\nexport const codeInterpreterMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  ...excelFileTypes,\n];\n\nexport const retrievalMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n];\n\nexport const imageExtRegex = /\\.(jpg|jpeg|png|gif|webp)$/i;\n\nexport const excelMimeTypes =\n  /^application\\/(vnd\\.ms-excel|msexcel|x-msexcel|x-ms-excel|x-excel|x-dos_ms_excel|xls|x-xls|vnd\\.openxmlformats-officedocument\\.spreadsheetml\\.sheet)$/;\n\nexport const textMimeTypes =\n  /^(text\\/(x-c|x-c\\+\\+|x-java|html|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|css|javascript|csv))$/;\n\nexport const applicationMimeTypes =\n  /^(application\\/(csv|json|pdf|x-tar|typescript|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation|spreadsheetml\\.sheet)|xml|zip))$/;\n\nexport const imageMimeTypes = /^image\\/(jpeg|gif|png|webp)$/;\n\nexport const supportedMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n];\n\nexport const codeInterpreterMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n];\n\nexport const retrievalMimeTypes = [\n  /^(text\\/(x-c|x-c\\+\\+|html|x-java|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain))$/,\n  /^(application\\/(json|pdf|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation)))$/,\n];\n\nexport const megabyte = 1024 * 1024;\n/** Helper function to get megabytes value */\nexport const mbToBytes = (mb: number): number => mb * megabyte;\n\nexport const fileConfig = {\n  endpoints: {\n    [EModelEndpoint.assistants]: {\n      fileLimit: 10,\n      fileSizeLimit: mbToBytes(512),\n      totalSizeLimit: mbToBytes(512),\n      supportedMimeTypes,\n      disabled: false,\n    },\n    default: {\n      fileLimit: 10,\n      fileSizeLimit: mbToBytes(20),\n      totalSizeLimit: mbToBytes(25),\n      supportedMimeTypes: [imageMimeTypes],\n      disabled: false,\n    },\n  },\n  serverFileSizeLimit: mbToBytes(512),\n  avatarSizeLimit: mbToBytes(2),\n  checkType: function (fileType: string, supportedTypes: RegExp[] = supportedMimeTypes) {\n    return supportedTypes.some((regex) => regex.test(fileType));\n  },\n};\n\nconst supportedMimeTypesSchema = z\n  .array(z.any())\n  .optional()\n  .refine(\n    (mimeTypes) => {\n      if (!mimeTypes) {\n        return true;\n      }\n      return mimeTypes.every(\n        (mimeType) => mimeType instanceof RegExp || typeof mimeType === 'string',\n      );\n    },\n    {\n      message: 'Each mimeType must be a string or a RegExp object.',\n    },\n  );\n\nexport const endpointFileConfigSchema = z.object({\n  disabled: z.boolean().optional(),\n  fileLimit: z.number().min(0).optional(),\n  fileSizeLimit: z.number().min(0).optional(),\n  totalSizeLimit: z.number().min(0).optional(),\n  supportedMimeTypes: supportedMimeTypesSchema.optional(),\n});\n\nexport const fileConfigSchema = z.object({\n  endpoints: z.record(endpointFileConfigSchema).optional(),\n  serverFileSizeLimit: z.number().min(0).optional(),\n  avatarSizeLimit: z.number().min(0).optional(),\n});\n\n/** Helper function to safely convert string patterns to RegExp objects */\nexport const convertStringsToRegex = (patterns: string[]): RegExp[] =>\n  patterns.reduce((acc: RegExp[], pattern) => {\n    try {\n      const regex = new RegExp(pattern);\n      acc.push(regex);\n    } catch (error) {\n      console.error(`Invalid regex pattern \"${pattern}\" skipped.`);\n    }\n    return acc;\n  }, []);\n\nexport function mergeFileConfig(dynamic: z.infer<typeof fileConfigSchema> | undefined): FileConfig {\n  const mergedConfig = fileConfig as FileConfig;\n  if (!dynamic) {\n    return mergedConfig;\n  }\n\n  if (dynamic.serverFileSizeLimit !== undefined) {\n    mergedConfig.serverFileSizeLimit = mbToBytes(dynamic.serverFileSizeLimit);\n  }\n\n  if (dynamic.avatarSizeLimit !== undefined) {\n    mergedConfig.avatarSizeLimit = mbToBytes(dynamic.avatarSizeLimit);\n  }\n\n  if (!dynamic.endpoints) {\n    return mergedConfig;\n  }\n\n  for (const key in dynamic.endpoints) {\n    const dynamicEndpoint = (dynamic.endpoints as Record<string, EndpointFileConfig>)[key];\n\n    if (!mergedConfig.endpoints[key]) {\n      mergedConfig.endpoints[key] = {};\n    }\n\n    const mergedEndpoint = mergedConfig.endpoints[key];\n\n    if (dynamicEndpoint.disabled === true) {\n      mergedEndpoint.disabled = true;\n      mergedEndpoint.fileLimit = 0;\n      mergedEndpoint.fileSizeLimit = 0;\n      mergedEndpoint.totalSizeLimit = 0;\n      mergedEndpoint.supportedMimeTypes = [];\n      continue;\n    }\n\n    if (dynamicEndpoint.fileSizeLimit !== undefined) {\n      mergedEndpoint.fileSizeLimit = mbToBytes(dynamicEndpoint.fileSizeLimit);\n    }\n\n    if (dynamicEndpoint.totalSizeLimit !== undefined) {\n      mergedEndpoint.totalSizeLimit = mbToBytes(dynamicEndpoint.totalSizeLimit);\n    }\n\n    const configKeys = ['fileLimit'] as const;\n    configKeys.forEach((field) => {\n      if (dynamicEndpoint[field] !== undefined) {\n        mergedEndpoint[field] = dynamicEndpoint[field];\n      }\n    });\n\n    if (dynamicEndpoint.supportedMimeTypes) {\n      mergedEndpoint.supportedMimeTypes = convertStringsToRegex(\n        dynamicEndpoint.supportedMimeTypes as unknown as string[],\n      );\n    }\n  }\n\n  return mergedConfig;\n}\n","/* eslint-disable max-len */\nimport { z } from 'zod';\nimport { EModelEndpoint, eModelEndpointSchema } from './schemas';\nimport { fileConfigSchema } from './file-config';\nimport { FileSources } from './types/files';\n\nexport const defaultSocialLogins = ['google', 'facebook', 'openid', 'github', 'discord'];\n\nexport const fileSourceSchema = z.nativeEnum(FileSources);\n\nexport const assistantEndpointSchema = z.object({\n  /* assistants specific */\n  disableBuilder: z.boolean().optional(),\n  pollIntervalMs: z.number().optional(),\n  timeoutMs: z.number().optional(),\n  supportedIds: z.array(z.string()).min(1).optional(),\n  excludedIds: z.array(z.string()).min(1).optional(),\n  /* general */\n  apiKey: z.string().optional(),\n  baseURL: z.string().optional(),\n  models: z\n    .object({\n      default: z.array(z.string()).min(1),\n      fetch: z.boolean().optional(),\n      userIdQuery: z.boolean().optional(),\n    })\n    .optional(),\n  titleConvo: z.boolean().optional(),\n  titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n  titleModel: z.string().optional(),\n  headers: z.record(z.any()).optional(),\n});\n\nexport type TAssistantEndpoint = z.infer<typeof assistantEndpointSchema>;\n\nexport const endpointSchema = z.object({\n  name: z.string().refine((value) => !eModelEndpointSchema.safeParse(value).success, {\n    message: `Value cannot be one of the default endpoint (EModelEndpoint) values: ${Object.values(\n      EModelEndpoint,\n    ).join(', ')}`,\n  }),\n  apiKey: z.string(),\n  baseURL: z.string(),\n  models: z.object({\n    default: z.array(z.string()).min(1),\n    fetch: z.boolean().optional(),\n    userIdQuery: z.boolean().optional(),\n  }),\n  titleConvo: z.boolean().optional(),\n  titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n  titleModel: z.string().optional(),\n  summarize: z.boolean().optional(),\n  summaryModel: z.string().optional(),\n  forcePrompt: z.boolean().optional(),\n  modelDisplayLabel: z.string().optional(),\n  headers: z.record(z.any()).optional(),\n  addParams: z.record(z.any()).optional(),\n  dropParams: z.array(z.string()).optional(),\n});\n\nexport const rateLimitSchema = z.object({\n  fileUploads: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n});\n\nexport const configSchema = z.object({\n  version: z.string(),\n  cache: z.boolean(),\n  fileStrategy: fileSourceSchema.optional(),\n  registration: z\n    .object({\n      socialLogins: z.array(z.string()).optional(),\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .optional(),\n  rateLimits: rateLimitSchema.optional(),\n  fileConfig: fileConfigSchema.optional(),\n  endpoints: z\n    .object({\n      [EModelEndpoint.assistants]: assistantEndpointSchema.optional(),\n      custom: z.array(endpointSchema.partial()).optional(),\n    })\n    .strict()\n    .refine((data) => Object.keys(data).length > 0, {\n      message: 'At least one `endpoints` field must be provided.',\n    })\n    .optional(),\n});\n\nexport type TCustomConfig = z.infer<typeof configSchema>;\n\nexport enum KnownEndpoints {\n  mistral = 'mistral',\n  openrouter = 'openrouter',\n}\n\nexport const defaultEndpoints: EModelEndpoint[] = [\n  EModelEndpoint.openAI,\n  EModelEndpoint.assistants,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.bingAI,\n  EModelEndpoint.chatGPTBrowser,\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.google,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n];\n\nexport const alternateName = {\n  [EModelEndpoint.openAI]: 'OpenAI',\n  [EModelEndpoint.assistants]: 'Assistants',\n  [EModelEndpoint.azureOpenAI]: 'Azure OpenAI',\n  [EModelEndpoint.bingAI]: 'IntelliumGPT',\n  [EModelEndpoint.chatGPTBrowser]: 'ChatGPT',\n  [EModelEndpoint.gptPlugins]: 'Plugins',\n  [EModelEndpoint.google]: 'Google',\n  [EModelEndpoint.anthropic]: 'Anthropic',\n  [EModelEndpoint.custom]: 'Custom',\n};\n\nexport const defaultModels = {\n  [EModelEndpoint.assistants]: [\n    'gpt-3.5-turbo-0125',\n    'gpt-4-0125-preview',\n    'gpt-4-turbo-preview',\n    'gpt-4-1106-preview',\n    'gpt-3.5-turbo-1106',\n    'gpt-3.5-turbo-16k-0613',\n    'gpt-3.5-turbo-16k',\n    'gpt-3.5-turbo',\n    'gpt-4',\n    'gpt-4-0314',\n    'gpt-4-32k-0314',\n    'gpt-4-0613',\n    'gpt-3.5-turbo-0613',\n  ],\n  [EModelEndpoint.google]: [\n    'gemini-pro',\n    'gemini-pro-vision',\n    'chat-bison',\n    'chat-bison-32k',\n    'codechat-bison',\n    'codechat-bison-32k',\n    'text-bison',\n    'text-bison-32k',\n    'text-unicorn',\n    'code-gecko',\n    'code-bison',\n    'code-bison-32k',\n  ],\n  [EModelEndpoint.anthropic]: [\n    'claude-2.1',\n    'claude-2',\n    'claude-1.2',\n    'claude-1',\n    'claude-1-100k',\n    'claude-instant-1',\n    'claude-instant-1-100k',\n  ],\n  [EModelEndpoint.openAI]: [\n    'gpt-3.5-turbo-0125',\n    'gpt-3.5-turbo-16k-0613',\n    'gpt-3.5-turbo-16k',\n    'gpt-4-turbo-preview',\n    'gpt-4-0125-preview',\n    'gpt-4-1106-preview',\n    'gpt-3.5-turbo',\n    'gpt-3.5-turbo-1106',\n    'gpt-4-vision-preview',\n    'gpt-4',\n    'gpt-3.5-turbo-instruct-0914',\n    'gpt-3.5-turbo-0613',\n    'gpt-3.5-turbo-0301',\n    'gpt-3.5-turbo-instruct',\n    'gpt-4-0613',\n    'text-davinci-003',\n    'gpt-4-0314',\n  ],\n};\n\nexport const supportsRetrieval = new Set([\n  'gpt-3.5-turbo-0125',\n  'gpt-4-0125-preview',\n  'gpt-4-turbo-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n]);\n\nexport const EndpointURLs: { [key in EModelEndpoint]: string } = {\n  [EModelEndpoint.openAI]: `/api/ask/${EModelEndpoint.openAI}`,\n  [EModelEndpoint.bingAI]: `/api/ask/${EModelEndpoint.bingAI}`,\n  [EModelEndpoint.google]: `/api/ask/${EModelEndpoint.google}`,\n  [EModelEndpoint.custom]: `/api/ask/${EModelEndpoint.custom}`,\n  [EModelEndpoint.anthropic]: `/api/ask/${EModelEndpoint.anthropic}`,\n  [EModelEndpoint.gptPlugins]: `/api/ask/${EModelEndpoint.gptPlugins}`,\n  [EModelEndpoint.azureOpenAI]: `/api/ask/${EModelEndpoint.azureOpenAI}`,\n  [EModelEndpoint.chatGPTBrowser]: `/api/ask/${EModelEndpoint.chatGPTBrowser}`,\n  [EModelEndpoint.assistants]: '/api/assistants/chat',\n};\n\nexport const modularEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.google,\n  EModelEndpoint.openAI,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.custom,\n]);\n\nexport const supportsBalanceCheck = {\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.gptPlugins]: true,\n  [EModelEndpoint.custom]: true,\n};\n\nexport const visionModels = ['gpt-4-vision', 'llava-13b', 'gemini-pro-vision'];\n\nexport function validateVisionModel(\n  model: string | undefined,\n  additionalModels: string[] | undefined = [],\n) {\n  if (!model) {\n    return false;\n  }\n\n  return visionModels.concat(additionalModels).some((visionModel) => model.includes(visionModel));\n}\n\nexport const imageGenTools = new Set(['dalle', 'dall-e', 'stable-diffusion']);\n\n/**\n * Enum for cache keys.\n */\nexport enum CacheKeys {\n  /**\n   * Key for the config store namespace.\n   */\n  CONFIG_STORE = 'configStore',\n  /**\n   * Key for the plugins cache.\n   */\n  PLUGINS = 'plugins',\n  /**\n   * Key for the title generation cache.\n   */\n  GEN_TITLE = 'genTitle',\n  /**\n  /**\n   * Key for the tools cache.\n   */\n  TOOLS = 'tools',\n  /**\n   * Key for the model config cache.\n   */\n  MODELS_CONFIG = 'modelsConfig',\n  /**\n   * Key for the model queries cache.\n   */\n  MODEL_QUERIES = 'modelQueries',\n  /**\n   * Key for the default endpoint config cache.\n   */\n  ENDPOINT_CONFIG = 'endpointsConfig',\n  /**\n   * Key for accessing the model token config cache.\n   */\n  TOKEN_CONFIG = 'tokenConfig',\n  /**\n   * Key for the custom config cache.\n   */\n  CUSTOM_CONFIG = 'customConfig',\n  /**\n   * Key for accessing Abort Keys\n   */\n  ABORT_KEYS = 'abortKeys',\n  /**\n   * Key for the override config cache.\n   */\n  OVERRIDE_CONFIG = 'overrideConfig',\n  /**\n   * Key for accessing File Upload Violations (exceeding limit).\n   */\n  FILE_UPLOAD_LIMIT = 'file_upload_limit',\n}\n\n/**\n * Enum for authentication keys.\n */\nexport enum AuthKeys {\n  /**\n   * Key for the Service Account to use Vertex AI.\n   */\n  GOOGLE_SERVICE_KEY = 'GOOGLE_SERVICE_KEY',\n  /**\n   * API key to use Google Generative AI.\n   */\n  GOOGLE_API_KEY = 'GOOGLE_API_KEY',\n}\n\n/**\n * Enum for Image Detail Cost.\n *\n * **Low Res Fixed Cost:** `85`\n *\n * **High Res Calculation:**\n *\n * Number of `512px` Tiles * `170` + `85` (Additional Cost)\n */\nexport enum ImageDetailCost {\n  /**\n   * Low resolution is a fixed value.\n   */\n  LOW = 85,\n  /**\n   * High resolution Cost Per Tile\n   */\n  HIGH = 170,\n  /**\n   * Additional Cost added to High Resolution Total Cost\n   */\n  ADDITIONAL = 85,\n}\n\n/**\n * Tab values for Settings Dialog\n */\nexport enum SettingsTabValues {\n  /**\n   * Tab for General Settings\n   */\n  GENERAL = 'general',\n  /**\n   * Tab for Beta Features\n   */\n  BETA = 'beta',\n  /**\n   * Tab for Data Controls\n   */\n  DATA = 'data',\n  /**\n   * Tab for Account Settings\n   */\n  ACCOUNT = 'account',\n}\n\n/**\n * Enum for app-wide constants\n */\nexport enum Constants {\n  /**\n   * Key for the app's version.\n   */\n  VERSION = 'v0.6.10',\n  /**\n   * Key for the Custom Config's version (librechat.yaml).\n   */\n  CONFIG_VERSION = '1.0.3',\n  /**\n   * Standard value for the first message's `parentMessageId` value, to indicate no parent exists.\n   */\n  NO_PARENT = '00000000-0000-0000-0000-000000000000',\n}\n\nexport const defaultOrderQuery: {\n  order: 'asc';\n} = {\n  order: 'asc',\n};\n","import type { TConversation, TPreset } from './schemas';\nimport type { TEndpointOption } from './types';\nimport {\n  EModelEndpoint,\n  openAISchema,\n  googleSchema,\n  bingAISchema,\n  anthropicSchema,\n  chatGPTBrowserSchema,\n  gptPluginsSchema,\n  assistantSchema,\n  compactOpenAISchema,\n  compactGoogleSchema,\n  compactAnthropicSchema,\n  compactChatGPTSchema,\n  compactPluginsSchema,\n} from './schemas';\nimport { alternateName } from './config';\n\ntype EndpointSchema =\n  | typeof openAISchema\n  | typeof googleSchema\n  | typeof bingAISchema\n  | typeof anthropicSchema\n  | typeof chatGPTBrowserSchema\n  | typeof gptPluginsSchema\n  | typeof assistantSchema;\n\nconst endpointSchemas: Record<EModelEndpoint, EndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.google]: googleSchema,\n  [EModelEndpoint.bingAI]: bingAISchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.chatGPTBrowser]: chatGPTBrowserSchema,\n  [EModelEndpoint.gptPlugins]: gptPluginsSchema,\n  [EModelEndpoint.assistants]: assistantSchema,\n};\n\n// const schemaCreators: Record<EModelEndpoint, (customSchema: DefaultSchemaValues) => EndpointSchema> = {\n//   [EModelEndpoint.google]: createGoogleSchema,\n// };\n\nexport function getFirstDefinedValue(possibleValues: string[]) {\n  let returnValue;\n  for (const value of possibleValues) {\n    if (value) {\n      returnValue = value;\n      break;\n    }\n  }\n  return returnValue;\n}\n\nexport type TPossibleValues = {\n  models: string[];\n  secondaryModels?: string[];\n};\n\nexport const parseConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint: EModelEndpoint;\n  endpointType?: EModelEndpoint;\n  conversation: Partial<TConversation | TPreset>;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  let schema = endpointSchemas[endpoint];\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = endpointSchemas[endpointType];\n  }\n\n  // if (defaultSchema && schemaCreators[endpoint]) {\n  //   schema = schemaCreators[endpoint](defaultSchema);\n  // }\n\n  const convo = schema.parse(conversation) as TConversation;\n  const { models, secondaryModels } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  if (secondaryModels && convo.agentOptions) {\n    convo.agentOptions.model = getFirstDefinedValue(secondaryModels) ?? convo.agentOptions.model;\n  }\n\n  return convo;\n};\n\nexport const getResponseSender = (endpointOption: TEndpointOption): string => {\n  const { model, endpoint, endpointType, modelDisplayLabel, chatGptLabel, modelLabel, jailbreak } =\n    endpointOption;\n\n  if (\n    [\n      EModelEndpoint.openAI,\n      EModelEndpoint.azureOpenAI,\n      EModelEndpoint.gptPlugins,\n      EModelEndpoint.chatGPTBrowser,\n    ].includes(endpoint)\n  ) {\n    if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (model && model.includes('gpt-3')) {\n      return 'GPT-3.5';\n    } else if (model && model.includes('gpt-4')) {\n      return 'GPT-4';\n    } else if (model && model.includes('mistral')) {\n      return 'Mistral';\n    }\n    return alternateName[endpoint] ?? 'ChatGPT';\n  }\n\n  if (endpoint === EModelEndpoint.bingAI) {\n    return jailbreak ? 'IntGPT' : 'IntGPT Pro';\n  }\n\n  if (endpoint === EModelEndpoint.anthropic) {\n    return modelLabel ?? 'Claude';\n  }\n\n  if (endpoint === EModelEndpoint.google) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (model && model.includes('gemini')) {\n      return 'Gemini';\n    } else if (model && model.includes('code')) {\n      return 'Codey';\n    }\n\n    return 'PaLM2';\n  }\n\n  if (endpoint === EModelEndpoint.custom || endpointType === EModelEndpoint.custom) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (model && model.includes('mistral')) {\n      return 'Mistral';\n    } else if (model && model.includes('gpt-3')) {\n      return 'GPT-3.5';\n    } else if (model && model.includes('gpt-4')) {\n      return 'GPT-4';\n    } else if (modelDisplayLabel) {\n      return modelDisplayLabel;\n    }\n\n    return 'AI';\n  }\n\n  return '';\n};\n\ntype CompactEndpointSchema =\n  | typeof compactOpenAISchema\n  | typeof assistantSchema\n  | typeof compactGoogleSchema\n  | typeof bingAISchema\n  | typeof compactAnthropicSchema\n  | typeof compactChatGPTSchema\n  | typeof compactPluginsSchema;\n\nconst compactEndpointSchemas: Record<string, CompactEndpointSchema> = {\n  [EModelEndpoint.openAI]: compactOpenAISchema,\n  [EModelEndpoint.azureOpenAI]: compactOpenAISchema,\n  [EModelEndpoint.custom]: compactOpenAISchema,\n  [EModelEndpoint.assistants]: assistantSchema,\n  [EModelEndpoint.google]: compactGoogleSchema,\n  /* BingAI needs all fields */\n  [EModelEndpoint.bingAI]: bingAISchema,\n  [EModelEndpoint.anthropic]: compactAnthropicSchema,\n  [EModelEndpoint.chatGPTBrowser]: compactChatGPTSchema,\n  [EModelEndpoint.gptPlugins]: compactPluginsSchema,\n};\n\nexport const parseCompactConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint?: EModelEndpoint;\n  endpointType?: EModelEndpoint;\n  conversation: Partial<TConversation | TPreset>;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  if (!endpoint) {\n    throw new Error(`undefined endpoint: ${endpoint}`);\n  }\n\n  let schema = compactEndpointSchemas[endpoint];\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = compactEndpointSchemas[endpointType];\n  }\n\n  const convo = schema.parse(conversation) as TConversation;\n  // const { models, secondaryModels } = possibleValues ?? {};\n  const { models } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  // if (secondaryModels && convo.agentOptions) {\n  //   convo.agentOptionmodel = getFirstDefinedValue(secondaryModels) ?? convo.agentOptionmodel;\n  // }\n\n  return convo;\n};\n","import type { OpenAPIV3 } from 'openapi-types';\n\nexport type Schema = OpenAPIV3.SchemaObject & { description?: string };\nexport type Reference = OpenAPIV3.ReferenceObject & { description?: string };\n\nexport type Metadata = {\n  [key: string]: unknown;\n};\n\nexport enum Tools {\n  code_interpreter = 'code_interpreter',\n  retrieval = 'retrieval',\n  function = 'function',\n}\n\nexport type Tool = {\n  [type: string]: Tools;\n};\n\nexport type FunctionTool = {\n  type: Tools;\n  function?: {\n    description: string;\n    name: string;\n    parameters: Record<string, unknown>;\n  };\n};\n\nexport type Assistant = {\n  id: string;\n  created_at: number;\n  description: string | null;\n  file_ids: string[];\n  instructions: string | null;\n  metadata: Metadata | null;\n  model: string;\n  name: string | null;\n  object: string;\n  tools: FunctionTool[];\n};\n\nexport type AssistantCreateParams = {\n  model: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n};\n\nexport type AssistantUpdateParams = {\n  model?: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n};\n\nexport type AssistantListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n};\n\nexport type AssistantListResponse = {\n  object: string;\n  data: Assistant[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type File = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'assistants' | 'assistants_output';\n};\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n * Includes the tool call ID, the code interpreter definition, and the type of tool call.\n */\nexport type CodeToolCall = {\n  id: string; // The ID of the tool call.\n  code_interpreter: {\n    input: string; // The input to the Code Interpreter tool call.\n    outputs: Array<Record<string, unknown>>; // The outputs from the Code Interpreter tool call.\n  };\n  type: 'code_interpreter'; // The type of tool call, always 'code_interpreter'.\n};\n\n/**\n * Details of a Function tool call the run step was involved in.\n * Includes the tool call ID, the function definition, and the type of tool call.\n */\nexport type FunctionToolCall = {\n  id: string; // The ID of the tool call object.\n  function: {\n    arguments: string; // The arguments passed to the function.\n    name: string; // The name of the function.\n    output: string | null; // The output of the function, null if not submitted.\n  };\n  type: 'function'; // The type of tool call, always 'function'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type RetrievalToolCall = {\n  id: string; // The ID of the tool call object.\n  retrieval: unknown; // An empty object for now.\n  type: 'retrieval'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of the tool calls involved in a run step.\n * Can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.\n */\nexport type ToolCallsStepDetails = {\n  tool_calls: Array<CodeToolCall | RetrievalToolCall | FunctionToolCall>; // An array of tool calls the run step was involved in.\n  type: 'tool_calls'; // Always 'tool_calls'.\n};\n\nexport type ImageFile = {\n  /**\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n   * in the message content.\n   */\n  file_id: string;\n  filename: string;\n  filepath: string;\n  height: number;\n  width: number;\n  /**\n   * Prompt used to generate the image if applicable.\n   */\n  prompt?: string;\n  /**\n   * Additional metadata used to generate or about the image/tool_call.\n   */\n  metadata?: Record<string, unknown>;\n};\n\n// FileCitation.ts\nexport type FileCitation = {\n  end_index: number;\n  file_citation: FileCitationDetails;\n  start_index: number;\n  text: string;\n  type: 'file_citation';\n};\n\nexport type FileCitationDetails = {\n  file_id: string;\n  quote: string;\n};\n\nexport type FilePath = {\n  end_index: number;\n  file_path: FilePathDetails;\n  start_index: number;\n  text: string;\n  type: 'file_path';\n};\n\nexport type FilePathDetails = {\n  file_id: string;\n};\n\nexport type Text = {\n  annotations?: Array<FileCitation | FilePath>;\n  value: string;\n};\n\nexport enum ContentTypes {\n  TEXT = 'text',\n  TOOL_CALL = 'tool_call',\n  IMAGE_FILE = 'image_file',\n}\n\nexport enum StepTypes {\n  TOOL_CALLS = 'tool_calls',\n  MESSAGE_CREATION = 'message_creation',\n}\n\nexport enum ToolCallTypes {\n  FUNCTION = 'function',\n  RETRIEVAL = 'retrieval',\n  CODE_INTERPRETER = 'code_interpreter',\n}\n\nexport enum StepStatus {\n  IN_PROGRESS = 'in_progress',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport enum MessageContentTypes {\n  TEXT = 'text',\n  IMAGE_FILE = 'image_file',\n}\n\n//enum for RunStatus\n// The status of the run: queued, in_progress, requires_action, cancelling, cancelled, failed, completed, or expired.\nexport enum RunStatus {\n  QUEUED = 'queued',\n  IN_PROGRESS = 'in_progress',\n  REQUIRES_ACTION = 'requires_action',\n  CANCELLING = 'cancelling',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport type PartMetadata = {\n  progress?: number;\n  asset_pointer?: string;\n  status?: string;\n  action?: boolean;\n};\n\nexport type ContentPart = (CodeToolCall | RetrievalToolCall | FunctionToolCall | ImageFile | Text) &\n  PartMetadata;\n\nexport type TMessageContentParts =\n  | { type: ContentTypes.TEXT; text: Text & PartMetadata }\n  | {\n      type: ContentTypes.TOOL_CALL;\n      tool_call: (CodeToolCall | RetrievalToolCall | FunctionToolCall) & PartMetadata;\n    }\n  | { type: ContentTypes.IMAGE_FILE; image_file: ImageFile & PartMetadata };\n\nexport type TContentData = TMessageContentParts & {\n  messageId: string;\n  conversationId: string;\n  userMessageId: string;\n  thread_id: string;\n  index: number;\n  stream?: boolean;\n};\n\nexport const actionDelimiter = '_action_';\n\nexport enum AuthTypeEnum {\n  ServiceHttp = 'service_http',\n  OAuth = 'oauth',\n  None = 'none',\n}\n\nexport enum AuthorizationTypeEnum {\n  Bearer = 'bearer',\n  Basic = 'basic',\n  Custom = 'custom',\n}\n\nexport enum TokenExchangeMethodEnum {\n  DefaultPost = 'default_post',\n  BasicAuthHeader = 'basic_auth_header',\n}\n\nexport type ActionAuth = {\n  authorization_type?: AuthorizationTypeEnum;\n  custom_auth_header?: string;\n  type?: AuthTypeEnum;\n  authorization_content_type?: string;\n  authorization_url?: string;\n  client_url?: string;\n  scope?: string;\n  token_exchange_method?: TokenExchangeMethodEnum;\n};\n\nexport type ActionMetadata = {\n  api_key?: string;\n  auth?: ActionAuth;\n  domain?: string;\n  privacy_policy_url?: string;\n  raw_spec?: string;\n  oauth_client_id?: string;\n  oauth_client_secret?: string;\n};\n\nexport type Action = {\n  action_id: string;\n  assistant_id: string;\n  type?: string;\n  settings?: Record<string, unknown>;\n  metadata: ActionMetadata;\n};\n\nexport type AssistantAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport type AssistantDocument = {\n  user: string;\n  assistant_id: string;\n  avatar?: AssistantAvatar;\n  access_level?: number;\n  file_ids?: string[];\n  actions?: string[];\n  createdAt?: Date;\n  updatedAt?: Date;\n};\n\nexport enum FilePurpose {\n  FineTune = 'fine-tune',\n  FineTuneResults = 'fine-tune-results',\n  Assistants = 'assistants',\n  AssistantsOutput = 'assistants_output',\n}\n","export enum QueryKeys {\n  messages = 'messages',\n  allConversations = 'allConversations',\n  searchConversations = 'searchConversations',\n  conversation = 'conversation',\n  searchEnabled = 'searchEnabled',\n  user = 'user',\n  name = 'name', // user key name\n  models = 'models',\n  balance = 'balance',\n  endpoints = 'endpoints',\n  presets = 'presets',\n  searchResults = 'searchResults',\n  tokenCount = 'tokenCount',\n  availablePlugins = 'availablePlugins',\n  startupConfig = 'startupConfig',\n  assistants = 'assistants',\n  assistant = 'assistant',\n  endpointsConfigOverride = 'endpointsConfigOverride',\n  files = 'files',\n  fileConfig = 'fileConfig',\n  tools = 'tools',\n  actions = 'actions',\n  assistantDocs = 'assistantDocs',\n}\n\nexport enum MutationKeys {\n  fileUpload = 'fileUpload',\n  fileDelete = 'fileDelete',\n  updatePreset = 'updatePreset',\n  deletePreset = 'deletePreset',\n  logoutUser = 'logoutUser',\n  avatarUpload = 'avatarUpload',\n  assistantAvatarUpload = 'assistantAvatarUpload',\n  updateAction = 'updateAction',\n  deleteAction = 'deleteAction',\n}\n","import axios from 'axios';\n\nexport function setAcceptLanguageHeader(value: string): void {\n  axios.defaults.headers.common['Accept-Language'] = value;\n}\n\nexport function setTokenHeader(token: string) {\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n}\n","export const user = () => '/api/user';\n\nexport const balance = () => '/api/balance';\n\nexport const userPlugins = () => '/api/user/plugins';\n\nexport const messages = (conversationId: string, messageId?: string) =>\n  `/api/messages/${conversationId}${messageId ? `/${messageId}` : ''}`;\n\nconst keysEndpoint = '/api/keys';\n\nexport const keys = () => keysEndpoint;\n\nexport const userKeyQuery = (name: string) => `${keysEndpoint}?name=${name}`;\n\nexport const revokeUserKey = (name: string) => `${keysEndpoint}/${name}`;\n\nexport const revokeAllUserKeys = () => `${keysEndpoint}?all=true`;\n\nexport const abortRequest = (endpoint: string) => `/api/ask/${endpoint}/abort`;\n\nexport const conversations = (pageNumber: string) => `/api/convos?pageNumber=${pageNumber}`;\n\nexport const conversationById = (id: string) => `/api/convos/${id}`;\n\nexport const genTitle = () => '/api/convos/gen_title';\n\nexport const updateConversation = () => '/api/convos/update';\n\nexport const deleteConversation = () => '/api/convos/clear';\n\nexport const search = (q: string, pageNumber: string) =>\n  `/api/search?q=${q}&pageNumber=${pageNumber}`;\n\nexport const searchEnabled = () => '/api/search/enable';\n\nexport const presets = () => '/api/presets';\n\nexport const deletePreset = () => '/api/presets/delete';\n\nexport const aiEndpoints = () => '/api/endpoints';\n\nexport const endpointsConfigOverride = () => '/api/endpoints/config/override';\n\nexport const models = () => '/api/models';\n\nexport const tokenizer = () => '/api/tokenizer';\n\nexport const login = () => '/api/auth/login';\n\nexport const logout = () => '/api/auth/logout';\n\nexport const register = () => '/api/auth/register';\n\nexport const loginFacebook = () => '/api/auth/facebook';\n\nexport const loginGoogle = () => '/api/auth/google';\n\nexport const refreshToken = (retry?: boolean) => `/api/auth/refresh${retry ? '?retry=true' : ''}`;\n\nexport const requestPasswordReset = () => '/api/auth/requestPasswordReset';\n\nexport const resetPassword = () => '/api/auth/resetPassword';\n\nexport const plugins = () => '/api/plugins';\n\nexport const config = () => '/api/config';\n\nexport const assistants = (id?: string) => `/api/assistants${id ? `/${id}` : ''}`;\n\nexport const files = () => '/api/files';\n\nexport const images = () => `${files()}/images`;\n\nexport const avatar = () => `${images()}/avatar`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios';\nimport { setTokenHeader } from './headers-helpers';\nimport * as endpoints from './api-endpoints';\n\nasync function _get<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.get(url, { ...options });\n  return response.data;\n}\n\nasync function _post(url: string, data?: any) {\n  const response = await axios.post(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _postMultiPart(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n  });\n  return response.data;\n}\n\nasync function _put(url: string, data?: any) {\n  const response = await axios.put(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _delete<T>(url: string): Promise<T> {\n  const response = await axios.delete(url);\n  return response.data;\n}\n\nasync function _deleteWithOptions<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.delete(url, { ...options });\n  return response.data;\n}\n\nasync function _patch(url: string, data?: any) {\n  const response = await axios.patch(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nlet isRefreshing = false;\nlet failedQueue: { resolve: (value?: any) => void; reject: (reason?: any) => void }[] = [];\n\nconst refreshToken = (retry?: boolean) => _post(endpoints.refreshToken(retry));\n\nconst processQueue = (error: AxiosError | null, token: string | null = null) => {\n  failedQueue.forEach((prom) => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\n\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      if (isRefreshing) {\n        try {\n          const token = await new Promise((resolve, reject) => {\n            failedQueue.push({ resolve, reject });\n          });\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          return await axios(originalRequest);\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      }\n\n      isRefreshing = true;\n\n      try {\n        const { token } = await refreshToken(\n          // Handle edge case where we get a blank screen if the initial 401 error is from a refresh token request\n          originalRequest.url?.includes('api/auth/refresh') ? true : false,\n        );\n\n        if (token) {\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          setTokenHeader(token);\n          window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: token }));\n          processQueue(null, token);\n          return await axios(originalRequest);\n        } else {\n          window.location.href = '/login';\n        }\n      } catch (err) {\n        processQueue(err as AxiosError, null);\n        return Promise.reject(err);\n      } finally {\n        isRefreshing = false;\n      }\n    }\n\n    return Promise.reject(error);\n  },\n);\n\nexport default {\n  get: _get,\n  post: _post,\n  postMultiPart: _postMultiPart,\n  put: _put,\n  delete: _delete,\n  deleteWithOptions: _deleteWithOptions,\n  patch: _patch,\n  refreshToken,\n};\n","import * as f from './types/files';\nimport * as q from './types/queries';\nimport * as m from './types/mutations';\nimport * as a from './types/assistants';\nimport * as t from './types';\nimport * as s from './schemas';\nimport request from './request';\nimport * as endpoints from './api-endpoints';\n\nexport function getConversations(pageNumber: string): Promise<t.TGetConversationsResponse> {\n  return request.get(endpoints.conversations(pageNumber));\n}\n\nexport function abortRequestWithMessage(\n  endpoint: string,\n  abortKey: string,\n  message: string,\n): Promise<void> {\n  return request.post(endpoints.abortRequest(endpoint), { arg: { abortKey, message } });\n}\n\nexport function deleteConversation(payload: t.TDeleteConversationRequest) {\n  //todo: this should be a DELETE request\n  return request.post(endpoints.deleteConversation(), { arg: payload });\n}\n\nexport function clearAllConversations(): Promise<unknown> {\n  return request.post(endpoints.deleteConversation(), { arg: {} });\n}\n\nexport function revokeUserKey(name: string): Promise<unknown> {\n  return request.delete(endpoints.revokeUserKey(name));\n}\n\nexport function revokeAllUserKeys(): Promise<unknown> {\n  return request.delete(endpoints.revokeAllUserKeys());\n}\n\nexport function getMessagesByConvoId(conversationId: string): Promise<s.TMessage[]> {\n  if (conversationId === 'new') {\n    return Promise.resolve([]);\n  }\n  return request.get(endpoints.messages(conversationId));\n}\n\nexport function getConversationById(id: string): Promise<s.TConversation> {\n  return request.get(endpoints.conversationById(id));\n}\n\nexport function updateConversation(\n  payload: t.TUpdateConversationRequest,\n): Promise<t.TUpdateConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function genTitle(payload: m.TGenTitleRequest): Promise<m.TGenTitleResponse> {\n  return request.post(endpoints.genTitle(), payload);\n}\n\nexport function updateMessage(payload: t.TUpdateMessageRequest): Promise<unknown> {\n  const { conversationId, messageId, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages(conversationId, messageId), { text });\n}\n\nexport function updateUserKey(payload: t.TUpdateUserKeyRequest) {\n  const { value } = payload;\n  if (!value) {\n    throw new Error('value is required');\n  }\n\n  return request.put(endpoints.keys(), payload);\n}\n\nexport function getPresets(): Promise<s.TPreset[]> {\n  return request.get(endpoints.presets());\n}\n\nexport function createPreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function updatePreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function deletePreset(arg: s.TPreset | undefined): Promise<m.PresetDeleteResponse> {\n  return request.post(endpoints.deletePreset(), arg);\n}\n\nexport function getSearchEnabled(): Promise<boolean> {\n  return request.get(endpoints.searchEnabled());\n}\n\nexport function getUser(): Promise<t.TUser> {\n  return request.get(endpoints.user());\n}\n\nexport function getUserBalance(): Promise<string> {\n  return request.get(endpoints.balance());\n}\n\nexport const searchConversations = async (\n  q: string,\n  pageNumber: string,\n): Promise<t.TSearchResults> => {\n  return request.get(endpoints.search(q, pageNumber));\n};\n\nexport const updateTokenCount = (text: string) => {\n  return request.post(endpoints.tokenizer(), { arg: text });\n};\n\nexport const login = (payload: t.TLoginUser) => {\n  return request.post(endpoints.login(), payload);\n};\n\nexport const logout = () => {\n  return request.post(endpoints.logout());\n};\n\nexport const register = (payload: t.TRegisterUser) => {\n  return request.post(endpoints.register(), payload);\n};\n\nexport const userKeyQuery = (name: string): Promise<t.TCheckUserKeyResponse> =>\n  request.get(endpoints.userKeyQuery(name));\n\nexport const getLoginGoogle = () => {\n  return request.get(endpoints.loginGoogle());\n};\n\nexport const requestPasswordReset = (\n  payload: t.TRequestPasswordReset,\n): Promise<t.TRequestPasswordResetResponse> => {\n  return request.post(endpoints.requestPasswordReset(), payload);\n};\n\nexport const resetPassword = (payload: t.TResetPassword) => {\n  return request.post(endpoints.resetPassword(), payload);\n};\n\nexport const getAvailablePlugins = (): Promise<s.TPlugin[]> => {\n  return request.get(endpoints.plugins());\n};\n\nexport const updateUserPlugins = (payload: t.TUpdateUserPlugins) => {\n  return request.post(endpoints.userPlugins(), payload);\n};\n\n/* Config */\n\nexport const getStartupConfig = (): Promise<t.TStartupConfig> => {\n  return request.get(endpoints.config());\n};\n\nexport const getAIEndpoints = (): Promise<t.TEndpointsConfig> => {\n  return request.get(endpoints.aiEndpoints());\n};\n\nexport const getModels = async (): Promise<t.TModelsConfig> => {\n  return request.get(endpoints.models());\n};\n\nexport const getEndpointsConfigOverride = (): Promise<unknown | boolean> => {\n  return request.get(endpoints.endpointsConfigOverride());\n};\n\n/* Assistants */\n\nexport const createAssistant = (data: a.AssistantCreateParams): Promise<a.Assistant> => {\n  return request.post(endpoints.assistants(), data);\n};\n\nexport const getAssistantById = (assistant_id: string): Promise<a.Assistant> => {\n  return request.get(endpoints.assistants(assistant_id));\n};\n\nexport const updateAssistant = (\n  assistant_id: string,\n  data: a.AssistantUpdateParams,\n): Promise<a.Assistant> => {\n  return request.patch(endpoints.assistants(assistant_id), data);\n};\n\nexport const deleteAssistant = (assistant_id: string): Promise<void> => {\n  return request.delete(endpoints.assistants(assistant_id));\n};\n\nexport const listAssistants = (\n  params?: a.AssistantListParams,\n): Promise<a.AssistantListResponse> => {\n  return request.get(endpoints.assistants(), { params });\n};\n\n/* Tools */\n\nexport const getAvailableTools = (): Promise<s.TPlugin[]> => {\n  return request.get(`${endpoints.assistants()}/tools`);\n};\n\n/* Files */\n\nexport const getFiles = (): Promise<f.TFile[]> => {\n  return request.get(endpoints.files());\n};\n\nexport const getFileConfig = (): Promise<f.FileConfig> => {\n  return request.get(`${endpoints.files()}/config`);\n};\n\nexport const uploadImage = (data: FormData): Promise<f.TFileUpload> => {\n  return request.postMultiPart(endpoints.images(), data);\n};\n\nexport const uploadFile = (data: FormData): Promise<f.TFileUpload> => {\n  return request.postMultiPart(endpoints.files(), data);\n};\n\nexport const uploadAvatar = (data: FormData): Promise<f.AvatarUploadResponse> => {\n  return request.postMultiPart(endpoints.avatar(), data);\n};\n\nexport const uploadAssistantAvatar = (data: m.AssistantAvatarVariables): Promise<a.Assistant> => {\n  return request.postMultiPart(endpoints.assistants(`avatar/${data.assistant_id}`), data.formData);\n};\n\nexport const updateAction = (data: m.UpdateActionVariables): Promise<m.UpdateActionResponse> => {\n  const { assistant_id, ...body } = data;\n  return request.post(endpoints.assistants(`actions/${assistant_id}`), body);\n};\n\nexport function getActions(): Promise<a.Action[]> {\n  return request.get(endpoints.assistants('actions'));\n}\n\nexport function getAssistantDocs(): Promise<a.AssistantDocument[]> {\n  return request.get(endpoints.assistants('documents'));\n}\n\nexport const deleteFiles = async (\n  files: f.BatchFile[],\n  assistant_id?: string,\n): Promise<f.DeleteFilesResponse> =>\n  request.deleteWithOptions(endpoints.files(), {\n    data: { files, assistant_id },\n  });\n\n/* conversations */\n\nexport const listConversations = (\n  params?: q.ConversationListParams,\n): Promise<q.ConversationListResponse> => {\n  // Assuming params has a pageNumber property\n  const pageNumber = params?.pageNumber || '1'; // Default to page 1 if not provided\n  return request.get(endpoints.conversations(pageNumber));\n};\n\nexport const listConversationsByQuery = (\n  params?: q.ConversationListParams & { searchQuery?: string },\n): Promise<q.ConversationListResponse> => {\n  const pageNumber = params?.pageNumber || '1'; // Default to page 1 if not provided\n  const searchQuery = params?.searchQuery || ''; // If no search query is provided, default to an empty string\n  // Update the endpoint to handle a search query\n  if (searchQuery !== '') {\n    return request.get(endpoints.search(searchQuery, pageNumber));\n  } else {\n    return request.get(endpoints.conversations(pageNumber));\n  }\n};\n\nexport const deleteAction = async (assistant_id: string, action_id: string): Promise<void> =>\n  request.delete(endpoints.assistants(`actions/${assistant_id}/${action_id}`));\n","/* eslint-disable */\n/**\n * Copyright (C) 2016 Maxime Petazzoni <maxime.petazzoni@bulix.org>.\n * All rights reserved.\n */\n\nimport request from './request';\nimport { setTokenHeader } from './headers-helpers';\n\nvar SSE = function (url, options) {\n  if (!(this instanceof SSE)) {\n    return new SSE(url, options);\n  }\n\n  this.INITIALIZING = -1;\n  this.CONNECTING = 0;\n  this.OPEN = 1;\n  this.CLOSED = 2;\n\n  this.url = url;\n\n  options = options || {};\n  this.headers = options.headers || {};\n  this.payload = options.payload !== undefined ? options.payload : '';\n  this.method = options.method || (this.payload && 'POST') || 'GET';\n  this.withCredentials = !!options.withCredentials;\n\n  this.FIELD_SEPARATOR = ':';\n  this.listeners = {};\n\n  this.xhr = null;\n  this.readyState = this.INITIALIZING;\n  this.progress = 0;\n  this.chunk = '';\n\n  this.addEventListener = function (type, listener) {\n    if (this.listeners[type] === undefined) {\n      this.listeners[type] = [];\n    }\n\n    if (this.listeners[type].indexOf(listener) === -1) {\n      this.listeners[type].push(listener);\n    }\n  };\n\n  this.removeEventListener = function (type, listener) {\n    if (this.listeners[type] === undefined) {\n      return;\n    }\n\n    var filtered = [];\n    this.listeners[type].forEach(function (element) {\n      if (element !== listener) {\n        filtered.push(element);\n      }\n    });\n    if (filtered.length === 0) {\n      delete this.listeners[type];\n    } else {\n      this.listeners[type] = filtered;\n    }\n  };\n\n  this.dispatchEvent = function (e) {\n    if (!e) {\n      return true;\n    }\n\n    e.source = this;\n\n    var onHandler = 'on' + e.type;\n    if (this.hasOwnProperty(onHandler)) {\n      this[onHandler].call(this, e);\n      if (e.defaultPrevented) {\n        return false;\n      }\n    }\n\n    if (this.listeners[e.type]) {\n      return this.listeners[e.type].every(function (callback) {\n        callback(e);\n        return !e.defaultPrevented;\n      });\n    }\n\n    return true;\n  };\n\n  this._setReadyState = function (state) {\n    var event = new CustomEvent('readystatechange');\n    event.readyState = state;\n    this.readyState = state;\n    this.dispatchEvent(event);\n  };\n\n  this._onStreamFailure = function (e) {\n    var event = new CustomEvent('error');\n    event.data = e.currentTarget.response;\n    this.dispatchEvent(event);\n    this.close();\n  };\n\n  this._onStreamAbort = function (e) {\n    this.dispatchEvent(new CustomEvent('abort'));\n    this.close();\n  };\n\n  this._onStreamProgress = async function (e) {\n    if (!this.xhr) {\n      return;\n    }\n\n    if (this.xhr.status === 401 && !this._retry) {\n      this._retry = true;\n      try {\n        const refreshResponse = await request.refreshToken();\n        this.headers = {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${refreshResponse.token}`,\n        };\n        setTokenHeader(refreshResponse.token);\n        window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: refreshResponse.token }));\n        this.stream();\n      } catch (err) {\n        this._onStreamFailure(e);\n        return;\n      }\n    } else if (this.xhr.status !== 200) {\n      this._onStreamFailure(e);\n      return;\n    }\n\n    if (this.readyState == this.CONNECTING) {\n      this.dispatchEvent(new CustomEvent('open'));\n      this._setReadyState(this.OPEN);\n    }\n\n    var data = this.xhr.responseText.substring(this.progress);\n    this.progress += data.length;\n    data.split(/(\\r\\n|\\r|\\n){2}/g).forEach(\n      function (part) {\n        if (part.trim().length === 0) {\n          this.dispatchEvent(this._parseEventChunk(this.chunk.trim()));\n          this.chunk = '';\n        } else {\n          this.chunk += part;\n        }\n      }.bind(this),\n    );\n  };\n\n  this._onStreamLoaded = function (e) {\n    this._onStreamProgress(e);\n\n    // Parse the last chunk.\n    this.dispatchEvent(this._parseEventChunk(this.chunk));\n    this.chunk = '';\n  };\n\n  /**\n   * Parse a received SSE event chunk into a constructed event object.\n   */\n  this._parseEventChunk = function (chunk) {\n    if (!chunk || chunk.length === 0) {\n      return null;\n    }\n\n    var e = { id: null, retry: null, data: '', event: 'message' };\n    chunk.split(/\\n|\\r\\n|\\r/).forEach(\n      function (line) {\n        line = line.trimRight();\n        var index = line.indexOf(this.FIELD_SEPARATOR);\n        if (index <= 0) {\n          // Line was either empty, or started with a separator and is a comment.\n          // Either way, ignore.\n          return;\n        }\n\n        var field = line.substring(0, index);\n        if (!(field in e)) {\n          return;\n        }\n\n        var value = line.substring(index + 1).trimLeft();\n        if (field === 'data') {\n          e[field] += value;\n        } else {\n          e[field] = value;\n        }\n      }.bind(this),\n    );\n\n    var event = new CustomEvent(e.event);\n    event.data = e.data;\n    event.id = e.id;\n    return event;\n  };\n\n  this._checkStreamClosed = function () {\n    if (!this.xhr) {\n      return;\n    }\n\n    if (this.xhr.readyState === XMLHttpRequest.DONE) {\n      this._setReadyState(this.CLOSED);\n    }\n  };\n\n  this.stream = function () {\n    this._setReadyState(this.CONNECTING);\n\n    this.xhr = new XMLHttpRequest();\n    this.xhr.addEventListener('progress', this._onStreamProgress.bind(this));\n    this.xhr.addEventListener('load', this._onStreamLoaded.bind(this));\n    this.xhr.addEventListener('readystatechange', this._checkStreamClosed.bind(this));\n    this.xhr.addEventListener('error', this._onStreamFailure.bind(this));\n    this.xhr.addEventListener('abort', this._onStreamAbort.bind(this));\n    this.xhr.open(this.method, this.url);\n    for (var header in this.headers) {\n      this.xhr.setRequestHeader(header, this.headers[header]);\n    }\n    this.xhr.withCredentials = this.withCredentials;\n    this.xhr.send(this.payload);\n  };\n\n  this.close = function () {\n    if (this.readyState === this.CLOSED) {\n      return;\n    }\n\n    this.xhr.abort();\n    this.xhr = null;\n    this._setReadyState(this.CLOSED);\n  };\n};\n\nexport { SSE };\n// Export our SSE module for npm.js\n// if (typeof exports !== 'undefined') {\n//   // exports.SSE = SSE;\n//   module.exports = { SSE };\n// }\n","import axios from 'axios';\nimport { URL } from 'url';\nimport crypto from 'crypto';\nimport { load } from 'js-yaml';\nimport type { FunctionTool, Schema, Reference, ActionMetadata } from './types/assistants';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport { Tools, AuthTypeEnum, AuthorizationTypeEnum } from './types/assistants';\n\nexport type ParametersSchema = {\n  type: string;\n  properties: Record<string, Reference | Schema>;\n  required: string[];\n};\n\nexport type ApiKeyCredentials = {\n  api_key: string;\n  custom_auth_header?: string;\n  authorization_type?: AuthorizationTypeEnum;\n};\n\nexport type OAuthCredentials = {\n  tokenUrl: string;\n  clientId: string;\n  clientSecret: string;\n  scope: string;\n};\n\nexport type Credentials = ApiKeyCredentials | OAuthCredentials;\n\nexport function sha1(input: string) {\n  return crypto.createHash('sha1').update(input).digest('hex');\n}\n\nexport function createURL(domain: string, path: string) {\n  const myURL = new URL(path, domain);\n  return myURL.toString();\n}\n\nexport class FunctionSignature {\n  name: string;\n  description: string;\n  parameters: ParametersSchema;\n\n  constructor(name: string, description: string, parameters: ParametersSchema) {\n    this.name = name;\n    this.description = description;\n    if (parameters.properties?.['requestBody']) {\n      this.parameters = parameters.properties?.['requestBody'] as ParametersSchema;\n    } else {\n      this.parameters = parameters;\n    }\n  }\n\n  toObjectTool(): FunctionTool {\n    return {\n      type: Tools.function,\n      function: {\n        name: this.name,\n        description: this.description,\n        parameters: this.parameters,\n      },\n    };\n  }\n}\n\nexport class ActionRequest {\n  domain: string;\n  path: string;\n  method: string;\n  operation: string;\n  operationHash?: string;\n  isConsequential: boolean;\n  contentType: string;\n  params?: object;\n\n  constructor(\n    domain: string,\n    path: string,\n    method: string,\n    operation: string,\n    isConsequential: boolean,\n    contentType: string,\n  ) {\n    this.domain = domain;\n    this.path = path;\n    this.method = method;\n    this.operation = operation;\n    this.isConsequential = isConsequential;\n    this.contentType = contentType;\n  }\n\n  private authHeaders: Record<string, string> = {};\n  private authToken?: string;\n\n  async setParams(params: object) {\n    this.operationHash = sha1(JSON.stringify(params));\n    this.params = params;\n  }\n\n  async setAuth(metadata: ActionMetadata) {\n    if (!metadata.auth) {\n      return;\n    }\n\n    const {\n      type,\n      /* API Key */\n      authorization_type,\n      custom_auth_header,\n      /* OAuth */\n      authorization_url,\n      client_url,\n      scope,\n      token_exchange_method,\n    } = metadata.auth;\n\n    const {\n      /* API Key */\n      api_key,\n      /* OAuth */\n      oauth_client_id,\n      oauth_client_secret,\n    } = metadata;\n\n    const isApiKey = api_key && type === AuthTypeEnum.ServiceHttp;\n    const isOAuth =\n      oauth_client_id &&\n      oauth_client_secret &&\n      type === AuthTypeEnum.OAuth &&\n      authorization_url &&\n      client_url &&\n      scope &&\n      token_exchange_method;\n\n    if (isApiKey && authorization_type === AuthorizationTypeEnum.Basic) {\n      const basicToken = Buffer.from(api_key).toString('base64');\n      this.authHeaders['Authorization'] = `Basic ${basicToken}`;\n    } else if (isApiKey && authorization_type === AuthorizationTypeEnum.Bearer) {\n      this.authHeaders['Authorization'] = `Bearer ${api_key}`;\n    } else if (\n      isApiKey &&\n      authorization_type === AuthorizationTypeEnum.Custom &&\n      custom_auth_header\n    ) {\n      this.authHeaders[custom_auth_header] = api_key;\n    } else if (isOAuth) {\n      // TODO: WIP - OAuth support\n      if (!this.authToken) {\n        const tokenResponse = await axios.post(\n          client_url,\n          {\n            client_id: oauth_client_id,\n            client_secret: oauth_client_secret,\n            scope: scope,\n            grant_type: 'client_credentials',\n          },\n          {\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          },\n        );\n        this.authToken = tokenResponse.data.access_token;\n      }\n      this.authHeaders['Authorization'] = `Bearer ${this.authToken}`;\n    }\n  }\n\n  async execute() {\n    const url = createURL(this.domain, this.path);\n    const headers = {\n      ...this.authHeaders,\n      'Content-Type': this.contentType,\n    };\n\n    const method = this.method.toLowerCase();\n\n    if (method === 'get') {\n      return axios.get(url, { headers, params: this.params });\n    } else if (method === 'post') {\n      return axios.post(url, this.params, { headers });\n    } else if (method === 'put') {\n      return axios.put(url, this.params, { headers });\n    } else if (method === 'delete') {\n      return axios.delete(url, { headers, data: this.params });\n    } else if (method === 'patch') {\n      return axios.patch(url, this.params, { headers });\n    } else {\n      throw new Error(`Unsupported HTTP method: ${this.method}`);\n    }\n  }\n}\n\nexport function resolveRef(\n  schema: OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject | OpenAPIV3.RequestBodyObject,\n  components?: OpenAPIV3.ComponentsObject,\n): OpenAPIV3.SchemaObject {\n  if ('$ref' in schema && components) {\n    const refPath = schema.$ref.replace(/^#\\/components\\/schemas\\//, '');\n    const resolvedSchema = components.schemas?.[refPath];\n    if (!resolvedSchema) {\n      throw new Error(`Reference ${schema.$ref} not found`);\n    }\n    return resolveRef(resolvedSchema, components);\n  }\n  return schema as OpenAPIV3.SchemaObject;\n}\n\n/** Function to convert OpenAPI spec to function signatures and request builders */\nexport function openapiToFunction(openapiSpec: OpenAPIV3.Document): {\n  functionSignatures: FunctionSignature[];\n  requestBuilders: Record<string, ActionRequest>;\n} {\n  const functionSignatures: FunctionSignature[] = [];\n  const requestBuilders: Record<string, ActionRequest> = {};\n\n  // Base URL from OpenAPI spec servers\n  const baseUrl = openapiSpec.servers?.[0]?.url ?? '';\n\n  // Iterate over each path and method in the OpenAPI spec\n  for (const [path, methods] of Object.entries(openapiSpec.paths)) {\n    for (const [method, operation] of Object.entries(methods as OpenAPIV3.PathsObject)) {\n      const operationObj = operation as OpenAPIV3.OperationObject & {\n        'x-openai-isConsequential'?: boolean;\n      };\n\n      // Operation ID is used as the function name\n      const operationId = operationObj.operationId || `${method}_${path}`;\n      const description = operationObj.summary || operationObj.description || '';\n\n      const parametersSchema: ParametersSchema = { type: 'object', properties: {}, required: [] };\n\n      if (operationObj.requestBody) {\n        const requestBody = operationObj.requestBody as OpenAPIV3.RequestBodyObject;\n        const content = requestBody.content;\n        const contentType = Object.keys(content)[0];\n        const schema = content[contentType]?.schema;\n        const resolvedSchema = resolveRef(\n          schema as OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n          openapiSpec.components,\n        );\n        parametersSchema.properties['requestBody'] = resolvedSchema;\n      }\n\n      if (operationObj.parameters) {\n        for (const param of operationObj.parameters) {\n          const paramObj = param as OpenAPIV3.ParameterObject;\n          const resolvedSchema = resolveRef(\n            { ...paramObj.schema } as OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n            openapiSpec.components,\n          );\n          parametersSchema.properties[paramObj.name] = resolvedSchema;\n          if (paramObj.required) {\n            parametersSchema.required.push(paramObj.name);\n          }\n          if (paramObj.description && !('$$ref' in parametersSchema.properties[paramObj.name])) {\n            parametersSchema.properties[paramObj.name].description = paramObj.description;\n          }\n        }\n      }\n\n      const functionSignature = new FunctionSignature(operationId, description, parametersSchema);\n      functionSignatures.push(functionSignature);\n\n      const actionRequest = new ActionRequest(\n        baseUrl,\n        path,\n        method,\n        operationId,\n        !!operationObj['x-openai-isConsequential'], // Custom extension for consequential actions\n        operationObj.requestBody ? 'application/json' : 'application/x-www-form-urlencoded',\n      );\n\n      requestBuilders[operationId] = actionRequest;\n    }\n  }\n\n  return { functionSignatures, requestBuilders };\n}\n\nexport type ValidationResult = {\n  status: boolean;\n  message: string;\n  spec?: OpenAPIV3.Document;\n};\n\nexport function validateAndParseOpenAPISpec(specString: string): ValidationResult {\n  try {\n    let parsedSpec;\n    try {\n      parsedSpec = JSON.parse(specString);\n    } catch {\n      parsedSpec = load(specString);\n    }\n\n    // Check for servers\n    if (\n      !parsedSpec.servers ||\n      !Array.isArray(parsedSpec.servers) ||\n      parsedSpec.servers.length === 0\n    ) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    if (!parsedSpec.servers[0].url) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    // Check for paths\n    const paths = parsedSpec.paths;\n    if (!paths || typeof paths !== 'object' || Object.keys(paths).length === 0) {\n      return { status: false, message: 'No paths found in the OpenAPI spec.' };\n    }\n\n    const components = parsedSpec.components?.schemas || {};\n    const messages = [];\n\n    for (const [path, methods] of Object.entries(paths)) {\n      for (const [httpMethod, operation] of Object.entries(methods as OpenAPIV3.PathItemObject)) {\n        // Ensure operation is a valid operation object\n        const { responses } = operation as OpenAPIV3.OperationObject;\n        if (typeof operation === 'object' && responses) {\n          for (const [statusCode, response] of Object.entries(responses)) {\n            const content = (response as OpenAPIV3.ResponseObject).content;\n            if (content && content['application/json'] && content['application/json'].schema) {\n              const schema = content['application/json'].schema;\n              if ('$ref' in schema && typeof schema.$ref === 'string') {\n                const refName = schema.$ref.split('/').pop();\n                if (refName && !components[refName]) {\n                  messages.push(\n                    `In context=('paths', '${path}', '${httpMethod}', '${statusCode}', 'response', 'content', 'application/json', 'schema'), reference to unknown component ${refName}; using empty schema`,\n                  );\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      status: true,\n      message: messages.join('\\n') || 'OpenAPI spec is valid.',\n      spec: parsedSpec,\n    };\n  } catch (error) {\n    return { status: false, message: 'Error parsing OpenAPI spec.' };\n  }\n}\n","import type { TSubmission, TMessage, TEndpointOption } from './types';\nimport { tConvoUpdateSchema, EModelEndpoint } from './schemas';\nimport { EndpointURLs } from './config';\n\nexport default function createPayload(submission: TSubmission) {\n  const { conversation, message, messages, endpointOption, isEdited, isContinued } = submission;\n  const { conversationId } = tConvoUpdateSchema.parse(conversation);\n  const { endpoint, endpointType } = endpointOption as {\n    endpoint: EModelEndpoint;\n    endpointType?: EModelEndpoint;\n  };\n\n  let server = EndpointURLs[endpointType ?? endpoint];\n\n  if (isEdited && endpoint === EModelEndpoint.assistants) {\n    server += '/modify';\n  } else if (isEdited) {\n    server = server.replace('/ask/', '/edit/');\n  }\n\n  type Payload = Partial<TMessage> &\n    Partial<TEndpointOption> & {\n      isContinued: boolean;\n      conversationId: string | null;\n      messages?: typeof messages;\n    };\n\n  const payload: Payload = {\n    ...message,\n    ...endpointOption,\n    isContinued: !!(isEdited && isContinued),\n    conversationId,\n  };\n\n  return { server, payload };\n}\n"],"names":["EModelEndpoint","isUUID","z","string","uuid","ImageDetail","defaultAssistantFormValues","assistant","id","name","description","instructions","model","functions","code_interpreter","retrieval","endpointSettings","_a","google","default","maxOutputTokens","min","max","step","maxGeminiPro","defaultGeminiPro","temperature","topP","topK","eModelEndpointSchema","nativeEnum","extendedModelEndpointSchema","union","imageDetailNumeric","_b","low","auto","high","imageDetailValue","eImageDetailSchema","tPluginAuthConfigSchema","object","authField","label","tPluginSchema","pluginKey","icon","authConfig","array","authenticated","boolean","optional","isButton","tExampleSchema","input","content","output","tAgentOptionsSchema","agent","skipCompletion","number","tMessageSchema","messageId","endpoint","clientId","nullable","conversationId","parentMessageId","responseMessageId","overrideParentMessageId","bg","title","or","literal","sender","text","generation","isEdited","isCreatedByUser","error","createdAt","Date","toISOString","updatedAt","current","unfinished","searchResult","finish_reason","thread_id","tConversationSchema","user","endpointType","suggestions","messages","tools","systemMessage","modelLabel","examples","chatGptLabel","userLabel","promptPrefix","context","top_p","frequency_penalty","presence_penalty","jailbreak","jailbreakConversationId","conversationSignature","invocationId","toneStyle","agentOptions","file_ids","resendImages","imageDetail","assistant_id","presetOverride","record","unknown","tPresetSchema","omit","merge","presetId","defaultPreset","order","tConvoUpdateSchema","tPresetUpdateSchema","openAISchema","pick","transform","obj","_c","_d","_e","_f","_g","_h","_j","catch","googleSchema","isGeminiPro","toLowerCase","includes","maxOutputTokensMax","maxOutputTokensDefault","Math","__assign","_k","bingAISchema","anthropicSchema","chatGPTBrowserSchema","gptPluginsSchema","removeNullishValues","newObj","Object","keys","forEach","key","undefined","FileSources","FileContext","assistantSchema","compactOpenAISchema","compactGoogleSchema","compactAnthropicSchema","compactChatGPTSchema","compactPluginsSchema","length","supportsFiles","openAI","assistants","azureOpenAI","custom","excelFileTypes","fullMimeTypesList","__spreadArray","codeInterpreterMimeTypesList","retrievalMimeTypesList","imageExtRegex","excelMimeTypes","textMimeTypes","applicationMimeTypes","imageMimeTypes","supportedMimeTypes","codeInterpreterMimeTypes","retrievalMimeTypes","megabyte","mbToBytes","mb","fileConfig","endpoints","fileLimit","fileSizeLimit","totalSizeLimit","disabled","serverFileSizeLimit","avatarSizeLimit","checkType","fileType","supportedTypes","some","regex","test","supportedMimeTypesSchema","any","refine","mimeTypes","every","mimeType","RegExp","message","endpointFileConfigSchema","fileConfigSchema","convertStringsToRegex","patterns","reduce","acc","pattern","push","console","mergeFileConfig","dynamic","mergedConfig","dynamicEndpoint","mergedEndpoint","field","KnownEndpoints","defaultSocialLogins","fileSourceSchema","assistantEndpointSchema","disableBuilder","pollIntervalMs","timeoutMs","supportedIds","excludedIds","apiKey","baseURL","models","fetch","userIdQuery","titleConvo","titleMethod","titleModel","headers","endpointSchema","value","safeParse","success","concat","values","join","summarize","summaryModel","forcePrompt","modelDisplayLabel","addParams","dropParams","rateLimitSchema","fileUploads","ipMax","ipWindowInMinutes","userMax","userWindowInMinutes","configSchema","version","cache","fileStrategy","registration","socialLogins","allowedDomains","rateLimits","partial","strict","data","defaultEndpoints","bingAI","chatGPTBrowser","gptPlugins","anthropic","alternateName","defaultModels","supportsRetrieval","Set","EndpointURLs","modularEndpoints","supportsBalanceCheck","visionModels","validateVisionModel","additionalModels","visionModel","CacheKeys","AuthKeys","ImageDetailCost","SettingsTabValues","Constants","imageGenTools","defaultOrderQuery","endpointSchemas","getFirstDefinedValue","possibleValues","returnValue","_i","possibleValues_1","Tools","ContentTypes","StepTypes","ToolCallTypes","StepStatus","MessageContentTypes","RunStatus","parseConvo","conversation","schema","Error","convo","parse","secondaryModels","getResponseSender","endpointOption","compactEndpointSchemas","parseCompactConvo","AuthTypeEnum","AuthorizationTypeEnum","TokenExchangeMethodEnum","FilePurpose","QueryKeys","MutationKeys","actionDelimiter","setAcceptLanguageHeader","axios","defaults","common","setTokenHeader","token","keysEndpoint","conversations","pageNumber","search","q","images","_post","url","post","JSON","stringify","sent","isRefreshing","failedQueue","refreshToken","retry","endpoints.refreshToken","processQueue","prom","reject","resolve","interceptors","response","use","__awaiter","originalRequest","config","status","_retry","Promise","err_1","window","dispatchEvent","CustomEvent","detail","location","href","err_2","request","get","options","postMultiPart","formData","put","delete","deleteWithOptions","patch","abortKey","endpoints.abortRequest","arg","endpoints.assistants","payload","action_id","__generator","this","files","endpoints.conversationById","endpoints.conversations","endpoints.messages","params","searchQuery","endpoints.search","endpoints.revokeUserKey","body","__rest","endpoints.images","endpoints.userKeyQuery","SSE","INITIALIZING","CONNECTING","OPEN","CLOSED","method","withCredentials","FIELD_SEPARATOR","listeners","xhr","readyState","progress","chunk","addEventListener","type","listener","indexOf","removeEventListener","filtered","element","e","source","onHandler","hasOwnProperty","call","defaultPrevented","callback","_setReadyState","state","event","_onStreamFailure","currentTarget","close","_onStreamAbort","_onStreamProgress","async","refreshResponse","Authorization","stream","err","responseText","substring","split","part","trim","_parseEventChunk","bind","_onStreamLoaded","line","index","trimRight","trimLeft","_checkStreamClosed","XMLHttpRequest","DONE","header","open","setRequestHeader","send","abort","sha1","crypto","createHash","update","digest","createURL","domain","path","URL","toString","FunctionSignature","parameters","properties","prototype","toObjectTool","function","ActionRequest","operation","isConsequential","contentType","authHeaders","setParams","operationHash","setAuth","metadata","auth","authorization_type","custom_auth_header","authorization_url","client_url","scope","token_exchange_method","api_key","oauth_client_id","oauth_client_secret","isApiKey","ServiceHttp","isOAuth","OAuth","Basic","basicToken","Buffer","from","Bearer","Custom","authToken","client_id","client_secret","grant_type","tokenResponse","access_token","execute","resolveRef","components","refPath","$ref","replace","resolvedSchema","schemas","openapiToFunction","openapiSpec","functionSignatures","requestBuilders","baseUrl","servers","entries","paths","methods","operationObj","operationId","summary","parametersSchema","required","requestBody","_l","paramObj","functionSignature","actionRequest","validateAndParseOpenAPISpec","specString","parsedSpec","load","Array","isArray","httpMethod","responses","statusCode","refName","pop","spec","createPayload","submission","isContinued","server"],"mappings":"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D,EAAOjD,kBAEa,aAAzBtF,EAAAuI,EAAO1D,4BAAOwE,gBACTd,EAAO1D,MAId0D,EAAO1C,cACuB,cAA9B0C,EAAO1C,aAAapD,QACmB,IAAvC8F,EAAO1C,aAAanD,gBACU,kBAA9B6F,EAAO1C,aAAalG,OACgB,IAApC4I,EAAO1C,aAAapF,oBAEb8H,EAAO1C,aAGTyC,EAAoBC,EAC7B,IACCf,OAAM,WAAM,OAAG,KEppBL8B,IAAatJ,EAAA,CAAA,GACvBjB,EAAewK,SAAS,EACzBvJ,EAACjB,EAAekB,SAAS,EACzBD,EAACjB,EAAeyK,aAAa,EAC7BxJ,EAACjB,EAAe0K,cAAc,EAC9BzJ,EAACjB,EAAe2K,SAAS,KAGdC,GAAiB,CAC5B,2BACA,sBACA,wBACA,yBACA,sBACA,6BACA,kBACA,oBACA,qEAGWC,GAAiBC,EAAA,CAC5B,WACA,aACA,kBACA,0EACA,YACA,cACA,mBACA,gBACA,kBACA,aACA,4EACA,gBACA,uBACA,cACA,aACA,aACA,WACA,aACA,kBACA,YACA,YACA,oBACA,yBACA,kBACA,mBACGF,OAGQG,GAA4BD,EAAA,CACvC,WACA,aACA,kBACA,0EACA,YACA,cACA,mBACA,gBACA,kBACA,aACA,4EACA,gBACA,uBACA,cACA,aACA,aACA,WACA,aACA,kBACA,YACA,YACA,oBACA,yBACA,kBACA,mBACGF,OAGQI,GAAyB,CACpC,WACA,aACA,0EACA,YACA,cACA,mBACA,gBACA,kBACA,aACA,4EACA,gBACA,uBACA,cACA,aACA,cAGWC,GAAgB,8BAEhBC,GACX,wJAEWC,GACX,qHAEWC,GACX,8KAEWC,GAAiB,+BAEjBC,GAAqB,CAChCH,GACAD,GACAE,GACAC,IAGWE,GAA2B,CACtCJ,GACAD,GACAE,GACAC,IAGWG,GAAqB,CAChC,kGACA,6HAGWC,GAAW,QAEXC,GAAY,SAACC,GAAuB,OAAAA,EAAKF,EAAS,EAElDG,GAAa,CACxBC,WAAS3J,EAAA,CAAA,EACPA,EAAClC,EAAeyK,YAAa,CAC3BqB,UAAW,GACXC,cAAeL,GAAU,KACzBM,eAAgB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"}